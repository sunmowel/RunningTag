/*************************************************************************************************************
*                                                  MODULE                                                    *
*************************************************************************************************************/
#ifndef BSP_SYN_H
#define BSP_SYN_H

#ifdef __cplusplus
extern "C" {
#endif


/*************************************************************************************************************
*                                                 DEFINES                                                    *
*************************************************************************************************************/
#define BSP_SYN_MASK                            (0x3U << 0)     
#define BSP_SYN_ON                              (0x1U << 0)
    
#define BSP_SYN_WAIT				            100u

    
/*************************************************************************************************************
*                                            FUNCTION PROTOTYPES                                             *
*************************************************************************************************************/
static inline CPU_INT8U BspSynGet (void)
{
	return (CPU_INT8U)P4_bit.no2;
}    
    
/*************************************************************************************************************
*                                            FUNCTION STATEMENT                                              *
*************************************************************************************************************/
CPU_BOOL BspSyn (void);


/*************************************************************************************************************
*                                               MODULE END                                                   *
*************************************************************************************************************/
#ifdef __cplusplus
}
#endif

#endif
